@model ISManagement.Models.Transaction

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Code to wire up DatePicker -->
<script src="@Url.Content("~/Scripts/jquery-1.12.4.js")"></script>
<script type="text/javascript">
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker({ maxDate: 0 });
    })
</script>

<h2>Edit Transaction</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, "AccountId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.transaction_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.transaction_date, new { htmlAttributes = new { @class = "date-picker" } })
                @Html.ValidationMessageFor(model => model.transaction_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.capture_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.capture_date, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @{ Html.EnableClientValidation(true); }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.amount, new {htmlAttributes = new {@class = "form-control"}})
                @{ Html.EnableClientValidation(true); }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href=@Url.Action("Details", "Accounts", new {id = Model.Account.Id})>Back to Transactions List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
